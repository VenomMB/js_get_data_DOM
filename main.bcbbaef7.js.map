{"version":3,"sources":["scripts/main.js"],"names":["population","document","querySelectorAll","totalPopulation","querySelector","averagePopulation","total","map","num","Number","innerHTML","split","join","reduce","acum","avarage","length","stringTotal","ThousandsFormat","stringAvarage","copyNum","thousandsOfNum","result","unshift"],"mappings":";AAAA,aA8BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BA,IAAMA,EAAaC,SAASC,iBAAiB,eACvCC,EAAkBF,SAASG,cAAc,qBACzCC,EAAoBJ,SAASG,cAAc,uBAE3CE,EAAQ,EAAIN,GACfO,IAAI,SAAAC,GAAOC,OAAAA,OAAOD,EAAIE,UAAUC,MAAM,KAAKC,KAAK,OAChDC,OAAO,SAACC,EAAMN,GAAQM,OAAAA,EAAON,GAAK,GAE/BO,EAAUT,EAAQN,EAAWgB,OAE7BC,EAAcC,EAAgBZ,GAC9Ba,EAAgBD,EAAgBH,GAEtC,SAASG,EAAgBV,GAKhBY,IAJHC,IAAAA,EAAiB,EACjBD,EAAUZ,EACRc,EAAS,GAEI,IAAZF,GACLC,EAAiBD,EAAU,IAC3BE,EAAOC,QAAQF,GACfD,GAAWA,EAAUC,GAAkB,IAGlCC,OAAAA,EAAOV,KAAK,KAGrBT,EAAgBO,UAAYO,EAC5BZ,EAAkBK,UAAYS","file":"main.bcbbaef7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst population = document.querySelectorAll('.population');\nconst totalPopulation = document.querySelector('.total-population');\nconst averagePopulation = document.querySelector('.average-population');\n\nconst total = [...population]\n  .map(num => Number(num.innerHTML.split(',').join('')))\n  .reduce((acum, num) => acum + num, 0);\n\nconst avarage = total / population.length;\n\nconst stringTotal = ThousandsFormat(total);\nconst stringAvarage = ThousandsFormat(avarage);\n\nfunction ThousandsFormat(num) {\n  let thousandsOfNum = 0;\n  let copyNum = num;\n  const result = [];\n\n  while (copyNum !== 0) {\n    thousandsOfNum = copyNum % 1000;\n    result.unshift(thousandsOfNum);\n    copyNum = (copyNum - thousandsOfNum) / 1000;\n  }\n\n  return result.join(',');\n}\n\ntotalPopulation.innerHTML = stringTotal;\naveragePopulation.innerHTML = stringAvarage;\n"]}